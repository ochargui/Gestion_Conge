// <auto-generated />
using System;
using Gestion_Conge.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Gestion_Conge.Migrations
{
    [DbContext(typeof(ProjectsDbContext))]
    [Migration("20210825110301_finalMigration")]
    partial class finalMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Gestion_Conge.Domain.Collaborateur", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.Property<string>("Prenom")
                        .HasColumnType("text");

                    b.Property<string>("RestPassword")
                        .HasColumnType("text");

                    b.Property<int>("fonctionid")
                        .HasColumnType("integer");

                    b.Property<int>("idSup")
                        .HasColumnType("integer");

                    b.Property<string>("mdp")
                        .HasColumnType("text");

                    b.Property<string>("picture")
                        .HasColumnType("text");

                    b.Property<int>("roleid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("fonctionid");

                    b.HasIndex("roleid");

                    b.ToTable("Collaborateurs");
                });

            modelBuilder.Entity("Gestion_Conge.Domain.conge", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Collaborateurid")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("dateDebut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("dateFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("libelle")
                        .HasColumnType("text");

                    b.Property<int>("statuid")
                        .HasColumnType("integer");

                    b.Property<int>("typeid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Collaborateurid");

                    b.HasIndex("statuid");

                    b.HasIndex("typeid");

                    b.ToTable("conges");
                });

            modelBuilder.Entity("Gestion_Conge.Domain.fonctionCollaborateur", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("label")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("fonctionCollaborateurs");
                });

            modelBuilder.Entity("Gestion_Conge.Domain.role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("label")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("Gestion_Conge.Domain.statusConge", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("label")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("statusConges");
                });

            modelBuilder.Entity("Gestion_Conge.Domain.typeConge", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("label")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("typeConges");
                });

            modelBuilder.Entity("Gestion_Conge.Domain.Collaborateur", b =>
                {
                    b.HasOne("Gestion_Conge.Domain.fonctionCollaborateur", "fonction")
                        .WithMany()
                        .HasForeignKey("fonctionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Conge.Domain.role", "role")
                        .WithMany()
                        .HasForeignKey("roleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fonction");

                    b.Navigation("role");
                });

            modelBuilder.Entity("Gestion_Conge.Domain.conge", b =>
                {
                    b.HasOne("Gestion_Conge.Domain.Collaborateur", null)
                        .WithMany("conge")
                        .HasForeignKey("Collaborateurid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Conge.Domain.statusConge", "statu")
                        .WithMany()
                        .HasForeignKey("statuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Conge.Domain.typeConge", "type")
                        .WithMany()
                        .HasForeignKey("typeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("statu");

                    b.Navigation("type");
                });

            modelBuilder.Entity("Gestion_Conge.Domain.Collaborateur", b =>
                {
                    b.Navigation("conge");
                });
#pragma warning restore 612, 618
        }
    }
}
